{{- /*
Copyright 2023 Dynatrace LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

apiVersion: v1
kind: Service
metadata:
  name: unguard-{{.Values.statusService.name}}
  labels:
    app.kubernetes.io/name: {{.Values.statusService.name}}
    app.kubernetes.io/part-of: unguard
spec:
  type: {{.Values.statusService.service.type}}
  selector:
    app.kubernetes.io/name: {{.Values.statusService.name}}
    app.kubernetes.io/part-of: unguard
  ports:
 {{- .Values.statusService.service.ports | toYaml | nindent 4 }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Values.statusService.serviceAccount.name}}
  labels:
    app.kubernetes.io/name: {{.Values.statusService.name}}
    app.kubernetes.io/part-of: unguard

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{.Values.statusService.role.name}}
  labels:
    app.kubernetes.io/name: {{.Values.statusService.name}}
    app.kubernetes.io/part-of: unguard
rules:
  {{- .Values.statusService.role.rules | toYaml | nindent 2}}

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{.Values.statusService.roleBindings.name}}
  labels:
    app.kubernetes.io/name: {{.Values.statusService.name}}
    app.kubernetes.io/part-of: unguard
subjects:
  {{- .Values.statusService.roleBindings.subjects | toYaml | nindent 2}}
roleRef:
  kind: {{.Values.statusService.roleBindings.roleRef.kind}}
  name: {{.Values.statusService.roleBindings.roleRef.name}}
  apiGroup: {{.Values.statusService.roleBindings.roleRef.apiGroup}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unguard-{{.Values.statusService.name}}
  labels:
    app.kubernetes.io/name: {{.Values.statusService.name}}
    app.kubernetes.io/part-of: unguard
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{.Values.statusService.name}}
      app.kubernetes.io/part-of: unguard
  strategy:
    type: {{.Values.statusService.deployment.strategy.type}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{.Values.statusService.name}}
        app.kubernetes.io/part-of: unguard
    spec:
      serviceAccountName: {{.Values.statusService.serviceAccount.name}}
      containers:
        - name: {{.Values.statusService.name}}
          image: {{.Values.statusService.deployment.container.image.repository}}:{{.Values.statusService.deployment.container.image.tag}}
          imagePullPolicy: {{.Values.statusService.deployment.container.image.pullPolicy}}
          ports:
            - containerPort: {{.Values.statusService.deployment.container.ports.containerPort}}
          env:
            - name: SERVER_PORT
              value: {{ quote .Values.statusService.deployment.container.env.SERVER_PORT }}
            - name: API_PATH
              value: {{ quote .Values.statusService.deployment.container.env.API_PATH }}
            - name: KUBERNETES_NAMESPACE
              value: {{ quote .Values.statusService.deployment.container.env.KUBERNETES_NAMESPACE }}
            - name: IGNORED_DEPLOYMENTS # add deployments to ignore separated by spaces
              value: {{ quote .Values.statusService.deployment.container.env.IGNORED_DEPLOYMENTS }}
            - name: MARIADB_SERVICE
              value: {{ tpl .Values.statusService.deployment.container.env.MARIADB_SERVICE . | quote }}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ tpl .Values.statusService.deployment.container.env.MARIADB_PASSWORD.secretKeyRef.name . }}
                  key: {{ tpl .Values.statusService.deployment.container.env.MARIADB_PASSWORD.secretKeyRef.key . }}
